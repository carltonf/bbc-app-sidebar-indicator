#ham-sign { 
    cursor: pointer; 
    position: absolute; 
    left: 10%; top: 50%;

    /* padding here is only because all children elements will be absolutely
positioned and yield 0x0 size for this element. NOTE: the trick to use padding
to reserve space instead of width and height. One benefit of this trick is the
relative coordinates would not be affected by size change. One example is the
offset of ::before and ::after will not be symmetric if #ham-sign has non-zero
height */
    padding: 10px 35px 16px 0px;
}

#ham-sign div, #ham-sign div::before, #ham-sign div::after {
  cursor: pointer;
  border-radius: 1px;
  height: 5px;
  width: 35px;
  background: white;
/* NOTE: the use of 'absolute' instead of 'relative'. Two main difference is no
space will be preserved during renderring AND absolutely positioned elements are
block displayed by default, but ::after and ::before are inline elements by
default */
  position: absolute;
  content: '';
}
#ham-sign div:before {
  top: -10px; 
}
#ham-sign div:after {
  bottom: -10px;
}

#ham-sign div, #ham-sign div:before, #ham-sign div:after {
  transition: all 500ms ease-in-out;
}
